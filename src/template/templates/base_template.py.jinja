{# Base template for test files #}

{%- block imports %}
import logging
import pytest
from unittest.mock import call, MagicMock

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)
{%- endblock %}

{%- block docstring %}
"""
Test: {{ test_name|default('Unnamed Test') }}
Purpose: {{ purpose|default('Test functionality') }}
{%- if steps %}
Steps:
{%- for step in steps %}
{{ loop.index }}. {{ step }}
{%- endfor %}
{%- endif %}
"""
{%- endblock %}

{%- block fixtures %}
@pytest.fixture
def env(tmp_path):
    """Create a test environment with templates."""
    templates_dir = tmp_path / "templates"
    templates_dir.mkdir()
    return create_environment(templates_dir)
{%- endblock %}

{%- block test_class %}
class {{ class_name|default('Test') }}:
    """{{ class_description|default('Test case implementation.') }}"""

    {%- block test_methods %}
    def {{ test_method_name|default('test_method') }}(self, env{% if extra_fixtures %}, {{ extra_fixtures }}{% endif %}):
        {%- block setup %}
        # Setup
        {%- endblock %}

        {%- block execute %}
        # Execute
        {%- endblock %}

        {%- block verify %}
        # Verify
        {%- endblock %}
    {%- endblock %}
{%- endblock %}